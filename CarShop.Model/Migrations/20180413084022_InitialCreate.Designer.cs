// <auto-generated />
using CarShop.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CarShop.Model.Migrations
{
    [DbContext(typeof(CarDbContext))]
    [Migration("20180413084022_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarShop.Model.CarCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CarCompanies");
                });

            modelBuilder.Entity("CarShop.Model.CarFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarFeatureType");

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CarFeatures");
                });

            modelBuilder.Entity("CarShop.Model.CarFeatureModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarFeatureId");

                    b.Property<int?>("CarModelId");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CarFeatureId");

                    b.HasIndex("CarModelId");

                    b.ToTable("CarFeatureModels");
                });

            modelBuilder.Entity("CarShop.Model.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BasePrice");

                    b.Property<int?>("CarCompanyId");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(100);

                    b.Property<string>("LongDescription")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("CarCompanyId");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("CarShop.Model.CarOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarModelId");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .HasMaxLength(200);

                    b.Property<string>("SecureCode")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.ToTable("CarOrders");
                });

            modelBuilder.Entity("CarShop.Model.CarOrderFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FeatureModelId");

                    b.Property<int>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("FeatureModelId");

                    b.HasIndex("OrderId");

                    b.ToTable("CarOrderFeature");
                });

            modelBuilder.Entity("CarShop.Model.CarFeatureModel", b =>
                {
                    b.HasOne("CarShop.Model.CarFeature", "CarFeature")
                        .WithMany()
                        .HasForeignKey("CarFeatureId");

                    b.HasOne("CarShop.Model.CarModel", "CarModel")
                        .WithMany("SupportedFeatures")
                        .HasForeignKey("CarModelId");
                });

            modelBuilder.Entity("CarShop.Model.CarModel", b =>
                {
                    b.HasOne("CarShop.Model.CarCompany", "CarCompany")
                        .WithMany("CarModels")
                        .HasForeignKey("CarCompanyId");
                });

            modelBuilder.Entity("CarShop.Model.CarOrder", b =>
                {
                    b.HasOne("CarShop.Model.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId");
                });

            modelBuilder.Entity("CarShop.Model.CarOrderFeature", b =>
                {
                    b.HasOne("CarShop.Model.CarFeatureModel", "CarFeatureModel")
                        .WithMany()
                        .HasForeignKey("FeatureModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CarShop.Model.CarOrder", "CarOrder")
                        .WithMany("CarFeatures")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
